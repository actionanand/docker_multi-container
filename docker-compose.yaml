version: "3.8"
services:
  mongodb: # service name `mongodb`, we can use this service name anywhere inside other container to refer this
    image: 'mongo:7.0'
    volumes: 
      - mongo-vol:/data/db
    # environment: 
    #   MONGO_INITDB_ROOT_USERNAME: anand
    #   MONGO_INITDB_ROOT_PASSWORD: secret
    #   - MONGO_INITDB_ROOT_USERNAME=anand
    env_file: 
      - ./env/mongo.env
  backend: # auto generated container name will be `docker_multi-container_backend_1`. But we can use backend for ref.
    # `docker_multi-container_backend` will be the auto generated image name
    build: ./backend # where the Dockerfile exists for the image
    # build command in detail as below
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    #   args:
    #     some-arg: 1
    container_name: docker_multi-container_node
    ports:
      - '3002:80'
    volumes: 
      - logs:/app/logs # named volume
      - ./backend:/app  # bind mount
      - /app/node_modules # anonymous volume
    env_file: 
      - ./env/backend.env
    depends_on:
      - mongodb
  frontend:
    build: ./frontend
    ports: 
      - '3001:3000'
    volumes: 
      - ./frontend/src:/app/src
    # `stdin_open` and `tty` for `-it` in `docker run`
    stdin_open: true 
    tty: true
    depends_on: 
      - backend

volumes: 
  mongo-vol:
  logs:
